{"ast":null,"code":"var _jsxFileName = \"/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/context/globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useState, useEffect } from \"react\";\n\n// Define the base URL for the API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5001/api/v1/\";\n\n// Create a context for global state management\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Get user preferences from localStorage if they exist\n  const getUserPreferencesFromStorage = () => {\n    const savedPreferences = localStorage.getItem('userPreferences');\n    return savedPreferences ? JSON.parse(savedPreferences) : {\n      name: 'User',\n      avatar: 'male'\n    };\n  };\n\n  // State for user preferences (name and avatar)\n  const [userPreferences, setUserPreferences] = useState(getUserPreferencesFromStorage);\n  useEffect(() => {\n    // Save the preferences in localStorage whenever they change\n    localStorage.setItem('userPreferences', JSON.stringify(userPreferences));\n  }, [userPreferences]);\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-income`, income);\n      fetchIncomes();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred');\n    }\n  };\n  const fetchIncomes = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${BASE_URL}get-incomes`);\n      const incomesWithType = data.map(income => ({\n        ...income,\n        type: 'income'\n      }));\n      setIncomes(incomesWithType);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred');\n    }\n  };\n  const removeIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`);\n      fetchIncomes();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'An error occurred');\n    }\n  };\n  const addExpense = async expense => {\n    try {\n      await axios.post(`${BASE_URL}add-expense`, expense);\n      fetchExpenses();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'An error occurred');\n    }\n  };\n  const fetchExpenses = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${BASE_URL}get-expenses`);\n      const expensesWithType = data.map(expense => ({\n        ...expense,\n        type: 'expense'\n      }));\n      setExpenses(expensesWithType);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'An error occurred');\n    }\n  };\n  const removeExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      fetchExpenses();\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'An error occurred');\n    }\n  };\n  const calculateTotalIncome = () => incomes.reduce((total, income) => total + income.amount, 0);\n  const calculateTotalExpenses = () => expenses.reduce((total, expense) => total + expense.amount, 0);\n  const calculateTotalBalance = () => calculateTotalIncome() - calculateTotalExpenses();\n  const recentTransactions = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3); // Return the latest 3 transactions\n  };\n\n  // Function to update user preferences and store them\n  const updateUserPreferences = newPreferences => {\n    setUserPreferences(prev => ({\n      ...prev,\n      ...newPreferences\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      incomes,\n      expenses,\n      setIncomes,\n      // Pass the setter function\n      setExpenses,\n      // Pass the setter function\n      addIncome,\n      fetchIncomes,\n      removeIncome,\n      addExpense,\n      fetchExpenses,\n      removeExpense,\n      calculateTotalIncome,\n      calculateTotalExpenses,\n      calculateTotalBalance,\n      recentTransactions,\n      userPreferences,\n      updateUserPreferences,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the global context\n_s(GlobalProvider, \"hDtrEfsocb6Ds8hiPVclaNRK+Cg=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["axios","React","useContext","useState","useEffect","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","getUserPreferencesFromStorage","savedPreferences","localStorage","getItem","JSON","parse","name","avatar","userPreferences","setUserPreferences","setItem","stringify","addIncome","income","post","fetchIncomes","err","_err$response","_err$response$data","response","data","message","get","incomesWithType","map","type","_err$response2","_err$response2$data","removeIncome","id","delete","_err$response3","_err$response3$data","addExpense","expense","fetchExpenses","_err$response4","_err$response4$data","expensesWithType","_err$response5","_err$response5$data","removeExpense","_err$response6","_err$response6$data","calculateTotalIncome","reduce","total","amount","calculateTotalExpenses","calculateTotalBalance","recentTransactions","history","sort","a","b","Date","createdAt","slice","updateUserPreferences","newPreferences","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/context/globalContext.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useContext, useState, useEffect } from \"react\";\n\n// Define the base URL for the API\nconst BASE_URL = \"http://localhost:5001/api/v1/\";\n\n// Create a context for global state management\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Get user preferences from localStorage if they exist\n    const getUserPreferencesFromStorage = () => {\n        const savedPreferences = localStorage.getItem('userPreferences');\n        return savedPreferences ? JSON.parse(savedPreferences) : { name: 'User', avatar: 'male' };\n    };\n\n    // State for user preferences (name and avatar)\n    const [userPreferences, setUserPreferences] = useState(getUserPreferencesFromStorage);\n\n    useEffect(() => {\n        // Save the preferences in localStorage whenever they change\n        localStorage.setItem('userPreferences', JSON.stringify(userPreferences));\n    }, [userPreferences]);\n\n    const addIncome = async (income) => {\n        try {\n            await axios.post(`${BASE_URL}add-income`, income);\n            fetchIncomes(); \n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const fetchIncomes = async () => {\n        try {\n            const { data } = await axios.get(`${BASE_URL}get-incomes`);\n            const incomesWithType = data.map(income => ({ ...income, type: 'income' }));\n            setIncomes(incomesWithType);\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const removeIncome = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}delete-income/${id}`);\n            fetchIncomes();\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const addExpense = async (expense) => {\n        try {\n            await axios.post(`${BASE_URL}add-expense`, expense);\n            fetchExpenses();\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const fetchExpenses = async () => {\n        try {\n            const { data } = await axios.get(`${BASE_URL}get-expenses`);\n            const expensesWithType = data.map(expense => ({ ...expense, type: 'expense' }));\n            setExpenses(expensesWithType);\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const removeExpense = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}delete-expense/${id}`);\n            fetchExpenses();\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    const calculateTotalIncome = () => incomes.reduce((total, income) => total + income.amount, 0);\n\n    const calculateTotalExpenses = () => expenses.reduce((total, expense) => total + expense.amount, 0);\n\n    const calculateTotalBalance = () => calculateTotalIncome() - calculateTotalExpenses();\n\n    const recentTransactions = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        return history.slice(0, 3); // Return the latest 3 transactions\n    };\n\n    // Function to update user preferences and store them\n    const updateUserPreferences = (newPreferences) => {\n        setUserPreferences((prev) => ({\n            ...prev,\n            ...newPreferences\n        }));\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            incomes,\n            expenses,\n            setIncomes, // Pass the setter function\n            setExpenses, // Pass the setter function\n            addIncome,\n            fetchIncomes,\n            removeIncome,\n            addExpense,\n            fetchExpenses,\n            removeExpense,\n            calculateTotalIncome,\n            calculateTotalExpenses,\n            calculateTotalBalance,\n            recentTransactions,\n            userPreferences,\n            updateUserPreferences,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\n// Custom hook to use the global context\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,+BAA+B;;AAEhD;AACA,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,6BAA6B,GAAGA,CAAA,KAAM;IACxC,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAChE,OAAOF,gBAAgB,GAAGG,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,GAAG;MAAEK,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAC;EAC7F,CAAC;;EAED;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAACgB,6BAA6B,CAAC;EAErFf,SAAS,CAAC,MAAM;IACZ;IACAiB,YAAY,CAACQ,OAAO,CAAC,iBAAiB,EAAEN,IAAI,CAACO,SAAS,CAACH,eAAe,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMI,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,IAAI;MACA,MAAMhC,KAAK,CAACiC,IAAI,CAAC,GAAG1B,QAAQ,YAAY,EAAEyB,MAAM,CAAC;MACjDE,YAAY,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVnB,QAAQ,CAAC,EAAAkB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMN,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM;QAAEK;MAAK,CAAC,GAAG,MAAMvC,KAAK,CAACyC,GAAG,CAAC,GAAGlC,QAAQ,aAAa,CAAC;MAC1D,MAAMmC,eAAe,GAAGH,IAAI,CAACI,GAAG,CAACX,MAAM,KAAK;QAAE,GAAGA,MAAM;QAAEY,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC;MAC3E9B,UAAU,CAAC4B,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOP,GAAG,EAAE;MAAA,IAAAU,cAAA,EAAAC,mBAAA;MACV5B,QAAQ,CAAC,EAAA2B,cAAA,GAAAV,GAAG,CAACG,QAAQ,cAAAO,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcN,IAAI,cAAAO,mBAAA,uBAAlBA,mBAAA,CAAoBN,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMO,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMhD,KAAK,CAACiD,MAAM,CAAC,GAAG1C,QAAQ,iBAAiByC,EAAE,EAAE,CAAC;MACpDd,YAAY,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAe,cAAA,EAAAC,mBAAA;MACVjC,QAAQ,CAAC,EAAAgC,cAAA,GAAAf,GAAG,CAACG,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcX,IAAI,cAAAY,mBAAA,uBAAlBA,mBAAA,CAAoBX,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMY,UAAU,GAAG,MAAOC,OAAO,IAAK;IAClC,IAAI;MACA,MAAMrD,KAAK,CAACiC,IAAI,CAAC,GAAG1B,QAAQ,aAAa,EAAE8C,OAAO,CAAC;MACnDC,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOnB,GAAG,EAAE;MAAA,IAAAoB,cAAA,EAAAC,mBAAA;MACVtC,QAAQ,CAAC,EAAAqC,cAAA,GAAApB,GAAG,CAACG,QAAQ,cAAAiB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAchB,IAAI,cAAAiB,mBAAA,uBAAlBA,mBAAA,CAAoBhB,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAM;QAAEf;MAAK,CAAC,GAAG,MAAMvC,KAAK,CAACyC,GAAG,CAAC,GAAGlC,QAAQ,cAAc,CAAC;MAC3D,MAAMkD,gBAAgB,GAAGlB,IAAI,CAACI,GAAG,CAACU,OAAO,KAAK;QAAE,GAAGA,OAAO;QAAET,IAAI,EAAE;MAAU,CAAC,CAAC,CAAC;MAC/E5B,WAAW,CAACyC,gBAAgB,CAAC;IACjC,CAAC,CAAC,OAAOtB,GAAG,EAAE;MAAA,IAAAuB,cAAA,EAAAC,mBAAA;MACVzC,QAAQ,CAAC,EAAAwC,cAAA,GAAAvB,GAAG,CAACG,QAAQ,cAAAoB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcnB,IAAI,cAAAoB,mBAAA,uBAAlBA,mBAAA,CAAoBnB,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMoB,aAAa,GAAG,MAAOZ,EAAE,IAAK;IAChC,IAAI;MACA,MAAMhD,KAAK,CAACiD,MAAM,CAAC,GAAG1C,QAAQ,kBAAkByC,EAAE,EAAE,CAAC;MACrDM,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOnB,GAAG,EAAE;MAAA,IAAA0B,cAAA,EAAAC,mBAAA;MACV5C,QAAQ,CAAC,EAAA2C,cAAA,GAAA1B,GAAG,CAACG,QAAQ,cAAAuB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAActB,IAAI,cAAAuB,mBAAA,uBAAlBA,mBAAA,CAAoBtB,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,MAAMuB,oBAAoB,GAAGA,CAAA,KAAMlD,OAAO,CAACmD,MAAM,CAAC,CAACC,KAAK,EAAEjC,MAAM,KAAKiC,KAAK,GAAGjC,MAAM,CAACkC,MAAM,EAAE,CAAC,CAAC;EAE9F,MAAMC,sBAAsB,GAAGA,CAAA,KAAMpD,QAAQ,CAACiD,MAAM,CAAC,CAACC,KAAK,EAAEZ,OAAO,KAAKY,KAAK,GAAGZ,OAAO,CAACa,MAAM,EAAE,CAAC,CAAC;EAEnG,MAAME,qBAAqB,GAAGA,CAAA,KAAML,oBAAoB,CAAC,CAAC,GAAGI,sBAAsB,CAAC,CAAC;EAErF,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,OAAO,GAAG,CAAC,GAAGzD,OAAO,EAAE,GAAGE,QAAQ,CAAC;IACzCuD,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;IACrE,OAAOL,OAAO,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAIC,cAAc,IAAK;IAC9ClD,kBAAkB,CAAEmD,IAAI,KAAM;MAC1B,GAAGA,IAAI;MACP,GAAGD;IACP,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIxE,OAAA,CAACE,aAAa,CAACwE,QAAQ;IAACC,KAAK,EAAE;MAC3BpE,OAAO;MACPE,QAAQ;MACRD,UAAU;MAAE;MACZE,WAAW;MAAE;MACbe,SAAS;MACTG,YAAY;MACZa,YAAY;MACZK,UAAU;MACVE,aAAa;MACbM,aAAa;MACbG,oBAAoB;MACpBI,sBAAsB;MACtBC,qBAAqB;MACrBC,kBAAkB;MAClB1C,eAAe;MACfkD,qBAAqB;MACrB5D,KAAK;MACLC;IACJ,CAAE;IAAAP,QAAA,EACGA;EAAQ;IAAAuE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;;AAED;AAAAzE,EAAA,CAzHaF,cAAc;AAAA4E,EAAA,GAAd5E,cAAc;AA0H3B,OAAO,MAAM6E,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,OAAOtF,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAACgF,GAAA,CAFWD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}