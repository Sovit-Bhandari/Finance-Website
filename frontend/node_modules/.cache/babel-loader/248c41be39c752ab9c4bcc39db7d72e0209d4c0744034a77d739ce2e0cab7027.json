{"ast":null,"code":"var _jsxFileName = \"/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Chart as ChartJs, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(ArcElement, Tooltip, Legend);\nfunction PieChart() {\n  _s();\n  const [isIncome, setIsIncome] = useState(true);\n\n  // Data for Income categories\n  const incomeLabels = ['Salary', 'Freelancing', 'Investments', 'Rental Income', 'Savings', 'Other'];\n  const incomeData = [5000, 1200, 1500, 800, 500, 300];\n  const incomeColors = ['#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800'];\n\n  // Data for Expense categories\n  const expenseLabels = ['Education', 'Groceries', 'Health', 'Subscriptions', 'Takeaways', 'Clothing', 'Travelling'];\n  const expenseData = [1000, 500, 300, 200, 100, 150, 250];\n  const expenseColors = ['#F44336', '#E57373', '#EF5350', '#FF7043', '#D32F2F', '#C62828', '#B71C1C'];\n\n  // Dynamic data based on isIncome state\n  const data = {\n    labels: isIncome ? incomeLabels : expenseLabels,\n    datasets: [{\n      label: isIncome ? 'Income' : 'Expenses',\n      data: isIncome ? incomeData : expenseData,\n      backgroundColor: isIncome ? incomeColors : expenseColors,\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: 'black'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PieChartStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-btn ${isIncome ? 'active' : ''}`,\n        onClick: () => setIsIncome(true),\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-btn ${!isIncome ? 'active red' : ''}`,\n        onClick: () => setIsIncome(false),\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n// Styled-components for PieChart\n_s(PieChart, \"j+zVknCIa+KzWl1QAILE1yer/B4=\");\n_c = PieChart;\nconst PieChartStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n\n    .button-container {\n        display: flex;\n        gap: 1rem;\n        margin-bottom: 1.5rem;\n\n        .toggle-btn {\n            padding: 0.5rem 1rem;\n            font-size: 1.2rem;\n            font-weight: bold;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            background-color: #2196F3;\n            color: white;\n            transition: background-color 0.3s ease;\n\n            &.active {\n                background-color: #4CAF50; /* Green for income active */\n            }\n\n            &.red.active {\n                background-color: #F44336; /* Red for expense active */\n            }\n\n            &:hover {\n                opacity: 0.8;\n            }\n        }\n    }\n\n    .chart-container {\n        width: 400px;\n        height: 400px;\n    }\n`;\n_c2 = PieChartStyled;\nexport default PieChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"PieChart\");\n$RefreshReg$(_c2, \"PieChartStyled\");","map":{"version":3,"names":["React","useState","Chart","ChartJs","ArcElement","Tooltip","Legend","Pie","styled","jsxDEV","_jsxDEV","register","PieChart","_s","isIncome","setIsIncome","incomeLabels","incomeData","incomeColors","expenseLabels","expenseData","expenseColors","data","labels","datasets","label","backgroundColor","borderWidth","options","responsive","plugins","legend","position","color","PieChartStyled","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Chart as ChartJs,\n    ArcElement,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nChartJs.register(\n    ArcElement,\n    Tooltip,\n    Legend\n);\n\nfunction PieChart() {\n    const [isIncome, setIsIncome] = useState(true);\n\n    // Data for Income categories\n    const incomeLabels = ['Salary', 'Freelancing', 'Investments', 'Rental Income', 'Savings', 'Other'];\n    const incomeData = [5000, 1200, 1500, 800, 500, 300];\n    const incomeColors = ['#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800'];\n\n    // Data for Expense categories\n    const expenseLabels = ['Education', 'Groceries', 'Health', 'Subscriptions', 'Takeaways', 'Clothing', 'Travelling'];\n    const expenseData = [1000, 500, 300, 200, 100, 150, 250];\n    const expenseColors = ['#F44336', '#E57373', '#EF5350', '#FF7043', '#D32F2F', '#C62828', '#B71C1C'];\n\n    // Dynamic data based on isIncome state\n    const data = {\n        labels: isIncome ? incomeLabels : expenseLabels,\n        datasets: [\n            {\n                label: isIncome ? 'Income' : 'Expenses',\n                data: isIncome ? incomeData : expenseData,\n                backgroundColor: isIncome ? incomeColors : expenseColors,\n                borderWidth: 1,\n            }\n        ]\n    };\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n                labels: {\n                    color: 'black',\n                },\n            },\n        },\n    };\n\n    return (\n        <PieChartStyled>\n            <div className=\"button-container\">\n                <button\n                    className={`toggle-btn ${isIncome ? 'active' : ''}`}\n                    onClick={() => setIsIncome(true)}\n                >\n                    Income\n                </button>\n                <button\n                    className={`toggle-btn ${!isIncome ? 'active red' : ''}`}\n                    onClick={() => setIsIncome(false)}\n                >\n                    Expenses\n                </button>\n            </div>\n            <div className=\"chart-container\">\n                <Pie data={data} options={options} />\n            </div>\n        </PieChartStyled>\n    );\n}\n\n// Styled-components for PieChart\nconst PieChartStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n\n    .button-container {\n        display: flex;\n        gap: 1rem;\n        margin-bottom: 1.5rem;\n\n        .toggle-btn {\n            padding: 0.5rem 1rem;\n            font-size: 1.2rem;\n            font-weight: bold;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            background-color: #2196F3;\n            color: white;\n            transition: background-color 0.3s ease;\n\n            &.active {\n                background-color: #4CAF50; /* Green for income active */\n            }\n\n            &.red.active {\n                background-color: #F44336; /* Red for expense active */\n            }\n\n            &:hover {\n                opacity: 0.8;\n            }\n        }\n    }\n\n    .chart-container {\n        width: 400px;\n        height: 400px;\n    }\n`;\n\nexport default PieChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}