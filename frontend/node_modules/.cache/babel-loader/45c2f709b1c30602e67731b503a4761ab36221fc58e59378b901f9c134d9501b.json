{"ast":null,"code":"var _jsxFileName = \"/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJs, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(ArcElement, Tooltip, Legend);\nfunction IncomeExpensePieChart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const [chartType, setChartType] = useState('income'); // State to track which chart is displayed\n  const [loading, setLoading] = useState(false); // Loading state\n\n  // Prepare income data for the pie chart\n  const incomeData = {\n    labels: incomes.map(income => income.category),\n    datasets: [{\n      label: 'Income by Category',\n      data: incomes.map(income => income.amount),\n      backgroundColor: ['#4CAF50', '#FFEB3B', '#00BCD4', '#FF5722', '#9C27B0', '#03A9F4', '#8BC34A'],\n      borderWidth: 1\n    }]\n  };\n\n  // Prepare expense data for the pie chart\n  const expenseData = {\n    labels: expenses.map(expense => expense.category),\n    datasets: [{\n      label: 'Expenses by Category',\n      data: expenses.map(expense => expense.amount),\n      backgroundColor: ['#673AB7', '#FF9800', '#03A9F4', '#9E9E9E', '#607D8B', '#795548'],\n      borderWidth: 1\n    }]\n  };\n\n  // Add a loading state while switching between charts\n  useEffect(() => {\n    setLoading(true);\n    const timer = setTimeout(() => setLoading(false), 300); // Simulate chart loading time\n    return () => clearTimeout(timer);\n  }, [chartType]);\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChartType('income'),\n        disabled: loading,\n        children: loading && chartType === 'income' ? 'Loading...' : 'Income'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChartType('expense'),\n        disabled: loading,\n        children: loading && chartType === 'expense' ? 'Loading...' : 'Expenses'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), !loading && /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartType === 'income' ? incomeData : expenseData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(IncomeExpensePieChart, \"YzkgZ1gohDQSm8XgH6P8llsqQC8=\", false, function () {\n  return [useGlobalContext];\n});\n_c = IncomeExpensePieChart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 2rem;\n    border-radius: 20px;\n    width: 100%;\n    max-width: 600px;\n    margin: auto;\n`;\n_c2 = ChartStyled;\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n\n    button {\n        padding: 0.5rem 1rem;\n        border: none;\n        border-radius: 5px;\n        color: white;\n        cursor: pointer;\n        font-size: 1rem;\n        transition: background-color 0.3s, opacity 0.3s;\n        pointer-events: ${props => props.disabled ? 'none' : 'auto'}; /* Disable pointer events when loading */\n        \n        &:hover {\n            opacity: 0.9;\n        }\n    }\n\n    button:nth-child(1) { /* Income button */\n        background-color: #03A9F4;\n\n        &:hover {\n            background-color: #0288D1;\n        }\n    }\n\n    button:nth-child(2) { /* Expenses button */\n        background-color: #F44336;\n\n        &:hover {\n            background-color: #D32F2F;\n        }\n    }\n`;\n_c3 = ButtonContainer;\nexport default IncomeExpensePieChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"IncomeExpensePieChart\");\n$RefreshReg$(_c2, \"ChartStyled\");\n$RefreshReg$(_c3, \"ButtonContainer\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJs","ArcElement","Tooltip","Legend","Pie","styled","useGlobalContext","jsxDEV","_jsxDEV","register","IncomeExpensePieChart","_s","incomes","expenses","chartType","setChartType","loading","setLoading","incomeData","labels","map","income","category","datasets","label","data","amount","backgroundColor","borderWidth","expenseData","expense","timer","setTimeout","clearTimeout","ChartStyled","children","ButtonContainer","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","props","_c3","$RefreshReg$"],"sources":["/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Chart as ChartJs, \n    ArcElement,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\n\nChartJs.register(\n    ArcElement,\n    Tooltip,\n    Legend\n);\n\nfunction IncomeExpensePieChart() {\n    const { incomes, expenses } = useGlobalContext();\n    const [chartType, setChartType] = useState('income'); // State to track which chart is displayed\n    const [loading, setLoading] = useState(false); // Loading state\n\n    // Prepare income data for the pie chart\n    const incomeData = {\n        labels: incomes.map((income) => income.category),\n        datasets: [\n            {\n                label: 'Income by Category',\n                data: incomes.map((income) => income.amount),\n                backgroundColor: ['#4CAF50', '#FFEB3B', '#00BCD4', '#FF5722', '#9C27B0', '#03A9F4', '#8BC34A'],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    // Prepare expense data for the pie chart\n    const expenseData = {\n        labels: expenses.map((expense) => expense.category),\n        datasets: [\n            {\n                label: 'Expenses by Category',\n                data: expenses.map((expense) => expense.amount),\n                backgroundColor: ['#673AB7', '#FF9800', '#03A9F4', '#9E9E9E', '#607D8B', '#795548'],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    // Add a loading state while switching between charts\n    useEffect(() => {\n        setLoading(true);\n        const timer = setTimeout(() => setLoading(false), 300); // Simulate chart loading time\n        return () => clearTimeout(timer);\n    }, [chartType]);\n\n    return (\n        <ChartStyled>\n            <ButtonContainer>\n                <button onClick={() => setChartType('income')} disabled={loading}>\n                    {loading && chartType === 'income' ? 'Loading...' : 'Income'}\n                </button>\n                <button onClick={() => setChartType('expense')} disabled={loading}>\n                    {loading && chartType === 'expense' ? 'Loading...' : 'Expenses'}\n                </button>\n            </ButtonContainer>\n            {!loading && (\n                <Pie data={chartType === 'income' ? incomeData : expenseData} />\n            )}\n        </ChartStyled>\n    );\n}\n\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 2rem;\n    border-radius: 20px;\n    width: 100%;\n    max-width: 600px;\n    margin: auto;\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n\n    button {\n        padding: 0.5rem 1rem;\n        border: none;\n        border-radius: 5px;\n        color: white;\n        cursor: pointer;\n        font-size: 1rem;\n        transition: background-color 0.3s, opacity 0.3s;\n        pointer-events: ${props => (props.disabled ? 'none' : 'auto')}; /* Disable pointer events when loading */\n        \n        &:hover {\n            opacity: 0.9;\n        }\n    }\n\n    button:nth-child(1) { /* Income button */\n        background-color: #03A9F4;\n\n        &:hover {\n            background-color: #0288D1;\n        }\n    }\n\n    button:nth-child(2) { /* Expenses button */\n        background-color: #F44336;\n\n        &:hover {\n            background-color: #D32F2F;\n        }\n    }\n`;\n\nexport default IncomeExpensePieChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}