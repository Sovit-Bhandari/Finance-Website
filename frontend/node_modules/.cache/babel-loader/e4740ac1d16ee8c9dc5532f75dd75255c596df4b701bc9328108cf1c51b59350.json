{"ast":null,"code":"var _jsxFileName = \"/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Income/Income.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\nimport { plus } from '../../utils/Icons';\nimport Modal from '../Modal/Modal';\n\n// Group incomes by month\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupIncomesByMonth = incomes => {\n  return incomes.reduce((acc, income) => {\n    const month = new Date(income.date).toLocaleString('default', {\n      month: 'long',\n      year: 'numeric'\n    });\n    if (!acc[month]) {\n      acc[month] = [];\n    }\n    acc[month].push(income);\n    return acc;\n  }, {});\n};\n\n// Sort incomes by date\nconst sortIncomesByDate = groupedIncomes => {\n  const sortedMonths = Object.keys(groupedIncomes).sort((a, b) => {\n    const [monthA, yearA] = a.split(' ');\n    const [monthB, yearB] = b.split(' ');\n    const dateA = new Date(`${monthA} 1, ${yearA}`);\n    const dateB = new Date(`${monthB} 1, ${yearB}`);\n    return dateB - dateA; // Sort descending by date\n  });\n  const sortedIncomes = sortedMonths.reduce((acc, month) => {\n    acc[month] = groupedIncomes[month].sort((a, b) => new Date(b.date) - new Date(a.date));\n    return acc;\n  }, {});\n  return {\n    sortedMonths,\n    sortedIncomes\n  };\n};\nfunction Income() {\n  _s();\n  const {\n    incomes,\n    fetchIncomes,\n    removeIncome,\n    calculateTotalIncome\n  } = useGlobalContext(); // Updated to reflect the new function names\n  const [groupedIncomes, setGroupedIncomes] = useState({});\n  const [sortedMonths, setSortedMonths] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    const fetchAndGroupIncomes = async () => {\n      await fetchIncomes();\n      const grouped = groupIncomesByMonth(incomes);\n      const {\n        sortedMonths,\n        sortedIncomes\n      } = sortIncomesByDate(grouped);\n      setGroupedIncomes(sortedIncomes);\n      setSortedMonths(sortedMonths);\n    };\n    fetchAndGroupIncomes();\n  }, [fetchIncomes, incomes]);\n  return /*#__PURE__*/_jsxDEV(IncomeStyled, {\n    children: /*#__PURE__*/_jsxDEV(InnerLayout, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-income-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"total-income\",\n            children: [\"Total Income: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", calculateTotalIncome()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 43\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-income-button\",\n            onClick: () => setIsModalOpen(true),\n            children: [plus, \" Add Income\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"incomes\",\n        children: sortedMonths.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), groupedIncomes[month].map(income => {\n            const {\n              _id,\n              title,\n              amount,\n              date,\n              category,\n              type\n            } = income;\n            return /*#__PURE__*/_jsxDEV(IncomeItem, {\n              id: _id,\n              title: title,\n              amount: amount,\n              date: date,\n              type: type,\n              category: category,\n              indicatorColor: \"var(--color-green)\",\n              deleteItem: removeIncome // Updated to use removeIncome\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this);\n          })]\n        }, month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Income, \"w3qO9kA+0MPt2EGP2iYB60qv6dc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Income;\nconst IncomeStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    height: 90vh;\n    \n    .header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    .total-income-container {\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n        z-index: 998;\n    }\n\n    .total-income {\n        color: #222260;\n        z-index: 999;\n        background: wheat;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 1.7rem;\n        gap: .5rem;\n        span {\n            font-size: 2rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n\n    .add-income-button {\n        font-size: 1.3rem;\n        z-index: 998;\n        background-color: var(--color-accent);\n        color: white;\n        border: none;\n        border-radius: 30px;\n        padding: 0.8rem 1.6rem;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        &:hover {\n            background-color: var(--color-green);\n        }\n    }\n\n    .incomes {\n        margin-top: 3rem;\n        .month-group {\n            border-radius: 10px;\n            margin-bottom: 1rem;\n            margin-top: 3rem;\n            opacity: 1;\n            z-index: 1000;\n            h3 {\n                background: #FCF6F9;\n                margin-bottom: 0.8rem;\n                width: fit-content;\n                padding: 10px;\n                font-size: 1rem;\n                border-radius: 10px;\n                color: Black;\n                opacity: 1;\n            }\n        }\n    }\n\n    @media (max-width: 700px) {\n        .header .total-income-container {\n            display: grid;\n            gap: 1rem;\n            margin-bottom: 2rem;\n        }\n    }\n`;\n_c2 = IncomeStyled;\nexport default Income;\nvar _c, _c2;\n$RefreshReg$(_c, \"Income\");\n$RefreshReg$(_c2, \"IncomeStyled\");","map":{"version":3,"names":["React","useEffect","useState","styled","useGlobalContext","InnerLayout","Form","IncomeItem","plus","Modal","jsxDEV","_jsxDEV","groupIncomesByMonth","incomes","reduce","acc","income","month","Date","date","toLocaleString","year","push","sortIncomesByDate","groupedIncomes","sortedMonths","Object","keys","sort","a","b","monthA","yearA","split","monthB","yearB","dateA","dateB","sortedIncomes","Income","_s","fetchIncomes","removeIncome","calculateTotalIncome","setGroupedIncomes","setSortedMonths","isModalOpen","setIsModalOpen","fetchAndGroupIncomes","grouped","IncomeStyled","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","map","_id","title","amount","category","type","id","indicatorColor","deleteItem","_c","div","_c2","$RefreshReg$"],"sources":["/Users/sovitbhandari/Documents/Documents - Sovit's MacBook Pro/Finance Website/frontend/src/Components/Income/Income.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\nimport { plus } from '../../utils/Icons';\nimport Modal from '../Modal/Modal';\n\n// Group incomes by month\nconst groupIncomesByMonth = (incomes) => {\n    return incomes.reduce((acc, income) => {\n        const month = new Date(income.date).toLocaleString('default', { month: 'long', year: 'numeric' });\n        if (!acc[month]) {\n            acc[month] = [];\n        }\n        acc[month].push(income);\n        return acc;\n    }, {});\n};\n\n// Sort incomes by date\nconst sortIncomesByDate = (groupedIncomes) => {\n    const sortedMonths = Object.keys(groupedIncomes).sort((a, b) => {\n        const [monthA, yearA] = a.split(' ');\n        const [monthB, yearB] = b.split(' ');\n\n        const dateA = new Date(`${monthA} 1, ${yearA}`);\n        const dateB = new Date(`${monthB} 1, ${yearB}`);\n\n        return dateB - dateA; // Sort descending by date\n    });\n\n    const sortedIncomes = sortedMonths.reduce((acc, month) => {\n        acc[month] = groupedIncomes[month].sort((a, b) => new Date(b.date) - new Date(a.date));\n        return acc;\n    }, {});\n\n    return { sortedMonths, sortedIncomes };\n};\n\nfunction Income() {\n    const { incomes, fetchIncomes, removeIncome, calculateTotalIncome } = useGlobalContext(); // Updated to reflect the new function names\n    const [groupedIncomes, setGroupedIncomes] = useState({});\n    const [sortedMonths, setSortedMonths] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    useEffect(() => {\n        const fetchAndGroupIncomes = async () => {\n            await fetchIncomes();\n            const grouped = groupIncomesByMonth(incomes);\n            const { sortedMonths, sortedIncomes } = sortIncomesByDate(grouped);\n            setGroupedIncomes(sortedIncomes);\n            setSortedMonths(sortedMonths);\n        };\n        fetchAndGroupIncomes();\n    }, [fetchIncomes, incomes]);\n\n    return (\n        <IncomeStyled>\n            <InnerLayout>\n                <div className=\"header\">\n                    <div className=\"total-income-container\">\n                        <h2 className=\"total-income\">\n                            Total Income: <span>${calculateTotalIncome()}</span> {/* Updated to use the new calculateTotalIncome */}\n                        </h2>\n                        <button className=\"add-income-button\" onClick={() => setIsModalOpen(true)}>\n                            {plus} Add Income\n                        </button>\n                    </div>\n                </div>\n                <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n                    <Form />\n                </Modal>\n                <div className=\"incomes\">\n                    {sortedMonths.map(month => (\n                        <div key={month} className=\"month-group\">\n                            <h3>{month}</h3>\n                            {groupedIncomes[month].map((income) => {\n                                const { _id, title, amount, date, category, type } = income;\n                                return (\n                                    <IncomeItem\n                                        key={_id}\n                                        id={_id}\n                                        title={title}\n                                        amount={amount}\n                                        date={date}\n                                        type={type}\n                                        category={category}\n                                        indicatorColor=\"var(--color-green)\"\n                                        deleteItem={removeIncome} // Updated to use removeIncome\n                                    />\n                                );\n                            })}\n                        </div>\n                    ))}\n                </div>\n            </InnerLayout>\n        </IncomeStyled>\n    );\n}\n\nconst IncomeStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    height: 90vh;\n    \n    .header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    .total-income-container {\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n        z-index: 998;\n    }\n\n    .total-income {\n        color: #222260;\n        z-index: 999;\n        background: wheat;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 1.7rem;\n        gap: .5rem;\n        span {\n            font-size: 2rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n\n    .add-income-button {\n        font-size: 1.3rem;\n        z-index: 998;\n        background-color: var(--color-accent);\n        color: white;\n        border: none;\n        border-radius: 30px;\n        padding: 0.8rem 1.6rem;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        &:hover {\n            background-color: var(--color-green);\n        }\n    }\n\n    .incomes {\n        margin-top: 3rem;\n        .month-group {\n            border-radius: 10px;\n            margin-bottom: 1rem;\n            margin-top: 3rem;\n            opacity: 1;\n            z-index: 1000;\n            h3 {\n                background: #FCF6F9;\n                margin-bottom: 0.8rem;\n                width: fit-content;\n                padding: 10px;\n                font-size: 1rem;\n                border-radius: 10px;\n                color: Black;\n                opacity: 1;\n            }\n        }\n    }\n\n    @media (max-width: 700px) {\n        .header .total-income-container {\n            display: grid;\n            gap: 1rem;\n            margin-bottom: 2rem;\n        }\n    }\n`;\n\nexport default Income;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;EACrC,OAAOA,OAAO,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACnC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,MAAM,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,SAAS,EAAE;MAAEH,KAAK,EAAE,MAAM;MAAEI,IAAI,EAAE;IAAU,CAAC,CAAC;IACjG,IAAI,CAACN,GAAG,CAACE,KAAK,CAAC,EAAE;MACbF,GAAG,CAACE,KAAK,CAAC,GAAG,EAAE;IACnB;IACAF,GAAG,CAACE,KAAK,CAAC,CAACK,IAAI,CAACN,MAAM,CAAC;IACvB,OAAOD,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;;AAED;AACA,MAAMQ,iBAAiB,GAAIC,cAAc,IAAK;EAC1C,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5D,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;IACpC,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAGL,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;IAEpC,MAAMG,KAAK,GAAG,IAAIlB,IAAI,CAAC,GAAGa,MAAM,OAAOC,KAAK,EAAE,CAAC;IAC/C,MAAMK,KAAK,GAAG,IAAInB,IAAI,CAAC,GAAGgB,MAAM,OAAOC,KAAK,EAAE,CAAC;IAE/C,OAAOE,KAAK,GAAGD,KAAK,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,MAAME,aAAa,GAAGb,YAAY,CAACX,MAAM,CAAC,CAACC,GAAG,EAAEE,KAAK,KAAK;IACtDF,GAAG,CAACE,KAAK,CAAC,GAAGO,cAAc,CAACP,KAAK,CAAC,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIZ,IAAI,CAACY,CAAC,CAACX,IAAI,CAAC,GAAG,IAAID,IAAI,CAACW,CAAC,CAACV,IAAI,CAAC,CAAC;IACtF,OAAOJ,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAO;IAAEU,YAAY;IAAEa;EAAc,CAAC;AAC1C,CAAC;AAED,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAE3B,OAAO;IAAE4B,YAAY;IAAEC,YAAY;IAAEC;EAAqB,CAAC,GAAGvC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAC1F,MAAM,CAACoB,cAAc,EAAEoB,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACuB,YAAY,EAAEoB,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,MAAM+C,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMP,YAAY,CAAC,CAAC;MACpB,MAAMQ,OAAO,GAAGrC,mBAAmB,CAACC,OAAO,CAAC;MAC5C,MAAM;QAAEY,YAAY;QAAEa;MAAc,CAAC,GAAGf,iBAAiB,CAAC0B,OAAO,CAAC;MAClEL,iBAAiB,CAACN,aAAa,CAAC;MAChCO,eAAe,CAACpB,YAAY,CAAC;IACjC,CAAC;IACDuB,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACP,YAAY,EAAE5B,OAAO,CAAC,CAAC;EAE3B,oBACIF,OAAA,CAACuC,YAAY;IAAAC,QAAA,eACTxC,OAAA,CAACN,WAAW;MAAA8C,QAAA,gBACRxC,OAAA;QAAKyC,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBxC,OAAA;UAAKyC,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACnCxC,OAAA;YAAIyC,SAAS,EAAC,cAAc;YAAAD,QAAA,GAAC,gBACX,eAAAxC,OAAA;cAAAwC,QAAA,GAAM,GAAC,EAACR,oBAAoB,CAAC,CAAC;YAAA;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACL7C,OAAA;YAAQyC,SAAS,EAAC,mBAAmB;YAACK,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAAC,IAAI,CAAE;YAAAI,QAAA,GACrE3C,IAAI,EAAC,aACV;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN7C,OAAA,CAACF,KAAK;QAACiD,MAAM,EAAEZ,WAAY;QAACa,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;QAAAI,QAAA,eAC7DxC,OAAA,CAACL,IAAI;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACR7C,OAAA;QAAKyC,SAAS,EAAC,SAAS;QAAAD,QAAA,EACnB1B,YAAY,CAACmC,GAAG,CAAC3C,KAAK,iBACnBN,OAAA;UAAiByC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACpCxC,OAAA;YAAAwC,QAAA,EAAKlC;UAAK;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACfhC,cAAc,CAACP,KAAK,CAAC,CAAC2C,GAAG,CAAE5C,MAAM,IAAK;YACnC,MAAM;cAAE6C,GAAG;cAAEC,KAAK;cAAEC,MAAM;cAAE5C,IAAI;cAAE6C,QAAQ;cAAEC;YAAK,CAAC,GAAGjD,MAAM;YAC3D,oBACIL,OAAA,CAACJ,UAAU;cAEP2D,EAAE,EAAEL,GAAI;cACRC,KAAK,EAAEA,KAAM;cACbC,MAAM,EAAEA,MAAO;cACf5C,IAAI,EAAEA,IAAK;cACX8C,IAAI,EAAEA,IAAK;cACXD,QAAQ,EAAEA,QAAS;cACnBG,cAAc,EAAC,oBAAoB;cACnCC,UAAU,EAAE1B,YAAa,CAAC;YAAA,GARrBmB,GAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASX,CAAC;UAEV,CAAC,CAAC;QAAA,GAjBIvC,KAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEvB;AAAChB,EAAA,CA3DQD,MAAM;EAAA,QAC2DnC,gBAAgB;AAAA;AAAAiE,EAAA,GADjF9B,MAAM;AA6Df,MAAMW,YAAY,GAAG/C,MAAM,CAACmE,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAnFIrB,YAAY;AAqFlB,eAAeX,MAAM;AAAC,IAAA8B,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}